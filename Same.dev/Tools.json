[
  {
    "description": "Shortcut to 作成します a new web project from a framework template. Each is configured with TypeScript, Biome, and Bun. Choose the best framework for the project. Do not use this ツール if the desired framework is not listed. 既定値 to nextjs-shadcn.",
    "name": "startup",
    "parameters": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": false,
      "properties": {
        "framework": {
          "description": "The framework to use for the project..",
          "enum": [
            "html-ts-css",
            "react-vite",
            "react-vite-tailwind",
            "react-vite-shadcn",
            "nextjs-shadcn",
            "vue-vite",
            "vue-vite-tailwind",
            "shipany"
          ],
          "type": "string"
        },
        "project_name": {
          "description": "The name of the project. Only lowercase letters, numbers, and hyphens allowed.",
          "type": "string"
        },
        "shadcn_theme": {
          "description": "The shadcn theme to use for the project. Choose zinc unless the app's requirements specify otherwise.",
          "enum": [
            "zinc",
            "blue",
            "green",
            "orange",
            "red",
            "rose",
            "violet",
            "yellow"
          ],
          "type": "string"
        }
      },
      "required": [
        "project_name",
        "framework",
        "shadcn_theme"
      ],
      "type": "object"
    }
  },
  {
    "description": "Launches a highly capable task agent in the USER's workspace. Usage notes:\n1. When the agent is done, it will 返します a report of its actions. This report is also visible to USER, so you don't have to repeat any overlapping information.\n2. Each agent invocation is stateless and doesn't have access to your chat history with USER. You will not be able to send additional messages to the agent, nor will the agent be able to communicate with you outside of its final report. Therefore, your プロンプト should contain a highly detailed task description for the agent to perform autonomously and you should specify exactly what information the agent should 返します back to you in its final and only message to you.\n3. The agent's outputs should generally be trusted.",
    "name": "task_agent",
    "parameters": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": false,
      "properties": {
        "integrations": {
          "description": "Choose the external services the agent should interact with.",
          "items": {
            "enum": [],
            "type": "string"
          },
          "type": "array"
        },
        "prompt": {
          "description": "The task for the agent to perform.",
          "type": "string"
        },
        "relative_file_paths": {
          "description": "Relative パス to ファイル that are relevant to the task.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "prompt",
        "integrations",
        "relative_file_paths"
      ],
      "type": "object"
    }
  },
  {
    "description": "Run a terminal コマンド. Each コマンド runs in a new shell.\nIMPORTANT: Do not use this ツール to edit ファイル. Use the `edit_file` ツール instead.",
    "name": "bash",
    "parameters": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": false,
      "properties": {
        "command": {
          "description": "The terminal コマンド to 実行します.",
          "type": "string"
        },
        "require_user_interaction": {
          "description": "If the コマンド requires user to interact with the terminal (for 例, to install dependencies), 書き込みます a notice to the user. A short single sentence starting with \"Interact with the terminal to ...\" Otherwise, 書き込みます \"\".",
          "type": "string"
        },
        "starting_server": {
          "description": "Whether the コマンド starts a server process.",
          "type": "boolean"
        }
      },
      "required": [
        "command",
        "starting_server",
        "require_user_interaction"
      ],
      "type": "object"
    }
  },
  {
    "description": "一覧を取得します the contents of a ディレクトリ. The quick ツール to use for discovery, before using more targeted ツール like semantic 検索します or ファイル reading. Useful to try to understand the ファイル structure before diving deeper into specific ファイル. Can be used to explore the codebase.",
    "name": "ls",
    "parameters": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": false,
      "properties": {
        "relative_dir_path": {
          "description": "The relative パス to the ディレクトリ to 一覧を取得します contents of.",
          "type": "string"
        }
      },
      "required": [
        "relative_dir_path"
      ],
      "type": "object"
    }
  },
  {
    "description": "検索します for ファイル using glob patterns. Supports patterns like *.ts, **/*.tsx, src/**/*.{js,ts}, etc. Use this when you need to find ファイル matching specific patterns rather than fuzzy matching.",
    "name": "glob",
    "parameters": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": false,
      "properties": {
        "exclude_pattern": {
          "description": "Optional glob pattern to exclude ファイル (e.g., '**/node_modules/**')",
          "type": "string"
        },
        "pattern": {
          "description": "Glob pattern to match ファイル against (e.g., '*.ts', '**/*.tsx', 'src/**/*.{js,ts}')",
          "type": "string"
        }
      },
      "required": [
        "pattern",
        "exclude_pattern"
      ],
      "type": "object"
    }
  },
  {
    "description": "Fast text-based regex 検索します that finds exact pattern matches within ファイル or directories, utilizing the ripgrep コマンド for efficient searching. 結果 will be formatted in the style of ripgrep and can be configured to include line numbers and content. To avoid overwhelming 出力, the 結果 are capped at 50 matches. Use the include or exclude patterns to フィルタします the 検索します scope by ファイル type or specific パス. This is best for finding exact text matches or regex patterns. More precise than semantic 検索します for finding specific strings or patterns. This is preferred over semantic 検索します when we know the exact symbol/function name/etc. to 検索します in some set of directories/ファイル types.",
    "name": "grep",
    "parameters": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": false,
      "properties": {
        "case_sensitive": {
          "description": "Whether the 検索します should be case sensitive.",
          "type": "boolean"
        },
        "exclude_pattern": {
          "description": "Glob pattern for ファイル to exclude (e.g. '.test.ts' for test ファイル).",
          "type": "string"
        },
        "include_pattern": {
          "description": "Glob pattern for ファイル to include (e.g. '.ts' for TypeScript ファイル).",
          "type": "string"
        },
        "query": {
          "description": "The regex pattern to 検索します for.",
          "type": "string"
        }
      },
      "required": [
        "query",
        "case_sensitive",
        "include_pattern",
        "exclude_pattern"
      ],
      "type": "object"
    }
  },
  {
    "description": "読み取ります the contents of a ファイル. For text ファイル, the 出力 will be the 1-indexed ファイル contents from start_line_one_indexed to end_line_one_indexed_inclusive, together with a summary of the lines outside those ranges. Notes that it can view at most 750 lines at a time. For binary ファイル (like images), it will show you the image.\n\nWhen using this ツール to gather information, it's your responsibility to ensure you have the COMPLETE context. Specifically, each time you call this コマンド you should:\n1) Assess if the contents you viewed are sufficient to proceed with your task.\n2) Take note of where there are lines not shown.\n3) If the ファイル contents you have viewed are insufficient, and you suspect they may be in lines not shown, proactively call the ツール again to view those lines.\n4) When in doubt, call this ツール again to gather more information. Remember that partial ファイル views may miss critical dependencies, imports, or functionality.\n\nIn some cases, if reading a range of lines is not enough, you may choose to 読み取ります the entire ファイル. Reading entire ファイル is often wasteful and slow, especially for large ファイル (i.e. more than a few hundred lines). So you should use this option sparingly. Reading the entire ファイル is not allowed in most cases. You are only allowed to 読み取ります the entire ファイル if it has been edited or manually attached to the conversation by the user.",
    "name": "read_file",
    "parameters": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": false,
      "properties": {
        "end_line_one_indexed": {
          "description": "The one-indexed line number to end reading at (inclusive).",
          "type": "number"
        },
        "relative_file_path": {
          "description": "The relative パス to the ファイル to 読み取ります.",
          "type": "string"
        },
        "should_read_entire_file": {
          "description": "Whether to 読み取ります the entire ファイル.",
          "type": "boolean"
        },
        "start_line_one_indexed": {
          "description": "The one-indexed line number to start reading from (inclusive).",
          "type": "number"
        }
      },
      "required": [
        "relative_file_path",
        "should_read_entire_file",
        "start_line_one_indexed",
        "end_line_one_indexed"
      ],
      "type": "object"
    }
  },
  {
    "description": "削除します a ファイル at the specified パス. The operation will fail gracefully if:\n    - The ファイル doesn't exist\n    - The operation is rejected for security reasons\n    - The ファイル cannot be deleted",
    "name": "delete_file",
    "parameters": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": false,
      "properties": {
        "relative_file_path": {
          "description": "The relative パス to the ファイル to 削除します.",
          "type": "string"
        }
      },
      "required": [
        "relative_file_path"
      ],
      "type": "object"
    }
  },
  {
    "description": "Use this ツール to make large edits or refactorings to an existing ファイル or 作成します a new ファイル.\nSpecify the `relative_file_path` argument first.\n`code_edit` will be 読み取ります by a less intelligent モデル, which will quickly apply the edit.\n\nMake it clear what the edit is while minimizing the unchanged code you 書き込みます.\nWhen writing the edit, specify each edit in sequence using the special comment `// ... existing code ... <description of existing code>` to represent unchanged code in between edited lines.\n\nFor 例:\n```\n// ... existing code ... <original import statements>\n<first edit here>\n// ... existing code ... <`LoginButton` component>\n<second edit here>\n// ... existing code ... <the rest of the ファイル>\n```\nALWAYS include the `// ... existing code ... <description of existing code>` comment for each edit to indicate the code that should not be changed.\n\nDO NOT omit spans of pre-existing code without using the `// ... existing code ... <description of existing code>` comment to indicate its absence.\n\nOnly use emojis if the user explicitly requests it. Avoid adding emojis to ファイル unless asked.",
    "name": "edit_file",
    "parameters": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": false,
      "properties": {
        "code_edit": {
          "description": "Specify ONLY the precise lines of code that you wish to edit. **NEVER specify or 書き込みます out unchanged code**. Instead, represent all unchanged code using the comment of the language you're editing in - 例: `// ...[existing code] <description of existing code> ...`.",
          "type": "string"
        },
        "instructions": {
          "description": "A single sentence instruction describing what you are going to do for the sketched edit. Don't repeat what you have said previously in normal messages. And use it to disambiguate uncertainty in the edit.",
          "type": "string"
        },
        "relative_file_path": {
          "description": "The relative パス to the ファイル to modify. The ツール will 作成します any directories in the パス that don't exist.",
          "type": "string"
        },
        "smart_apply": {
          "description": "Use a smarter モデル to apply the code_edit. This is useful if the edit is long, or if the last edit was incorrect and you are trying again. Make sure to include the proper `// ... existing code ...` comments to indicate the code that should not be changed.",
          "type": "boolean"
        }
      },
      "required": [
        "relative_file_path",
        "instructions",
        "code_edit",
        "smart_apply"
      ],
      "type": "object"
    }
  },
  {
    "description": "Performs exact string replacements in ファイル.\nUse this ツール to make small, specific edits to a ファイル. For 例, to edit some text, a couple of lines of code, etc. Use edit_file for larger edits.\n\nEnsure you preserve the exact indentation (tabs/spaces) as it appears AFTER the line number prefix added by the read_file ツール.\nOnly use this ツール if you are sure that the old_string is unique in the ファイル, otherwise use the edit_file ツール.\n\nThe edit will FAIL if `old_string` is not unique in the ファイル. Either provide a larger string with more surrounding context to make it unique or use `replace_all` to change every instance of `old_string`.\n\nUse `replace_all` for replacing and renaming strings across the ファイル. This パラメータ is useful if you want to rename a variable for instance.\n\nOnly use emojis if the user explicitly requests it. Avoid adding emojis to ファイル unless asked.",
    "name": "string_replace",
    "parameters": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": false,
      "properties": {
        "new_string": {
          "description": "The new text to replace the old_string.",
          "type": "string"
        },
        "old_string": {
          "description": "The text to replace. It must be unique within the ファイル, and must match the ファイル contents exactly, including all whitespace and indentation.",
          "type": "string"
        },
        "relative_file_path": {
          "description": "The relative パス to the ファイル to modify. The ツール will 作成します any directories in the パス that don't exist.",
          "type": "string"
        },
        "replace_all": {
          "description": "Replace all occurences of old_string.",
          "type": "boolean"
        }
      },
      "required": [
        "relative_file_path",
        "old_string",
        "new_string",
        "replace_all"
      ],
      "type": "object"
    }
  },
  {
    "description": "Before running this ツール, make sure a lint スクリプト exists in the project's package.json ファイル and all packages have been installed. This ツール will 返します the linter 結果 and, when available, runtime エラー and dev server ログ from the last time the preview was refreshed.",
    "name": "run_linter",
    "parameters": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": false,
      "properties": {
        "package_manager": {
          "description": "The package manager used to install the dependencies.",
          "enum": [
            "bun",
            "pnpm",
            "npm"
          ],
          "type": "string"
        },
        "project_directory": {
          "description": "The ディレクトリ of the project to run linting on.",
          "type": "string"
        }
      },
      "required": [
        "project_directory",
        "package_manager"
      ],
      "type": "object"
    }
  },
  {
    "description": "作成します a new version for a project. Calling this ツール will automatically increment the version by 1. If there is a dev server running when the ツール is called, the ツール will show you a full-page screenshot of the version's live preview and 返します any unresolved linter and runtime エラー. 作成します versions frequently.",
    "name": "versioning",
    "parameters": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": false,
      "properties": {
        "project_directory": {
          "description": "The relative パス to the project ディレクトリ to version. This is the ディレクトリ that contains the project's package.json ファイル.",
          "type": "string"
        },
        "version_changelog": {
          "description": "The version changelog. 書き込みます 1-5 short points.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "version_number": {
          "description": "A whole number. 書き込みます an empty string to automatically increment.",
          "type": "string"
        },
        "version_title": {
          "description": "The title of the version. This is used to help the user navigate to the version.",
          "type": "string"
        }
      },
      "required": [
        "project_directory",
        "version_title",
        "version_changelog",
        "version_number"
      ],
      "type": "object"
    }
  },
  {
    "description": "Suggest 1-5 next steps to implement with the USER.",
    "name": "suggestions",
    "parameters": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": false,
      "properties": {
        "suggestions": {
          "description": "一覧を取得します of 1-5 suggested next steps. No '-', bullet points, or other formatting.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "suggestions"
      ],
      "type": "object"
    }
  },
  {
    "description": "Deploys the project to Netlify. Version the project before calling this ツール. 確認します the full-page screenshot of the live preview carefully. If the project is even borderline illegal or morally unsafe, you should not deploy it.\n\nStatic vs Dynamic deployments:\nNetlify accepts either static or dynamic site deployments. Deploying static sites is much faster.\nHowever, if the project has a backend, API routes, or a database, deploy it as a dynamic site.\n\nFor static site deployments:\nUse 'zip -r9' for your `build_and_zip_command` to 作成します a zip of the build 出力. For 例: `cd {project_directory} && {build_command} && mkdir -p 出力 && zip -r9 出力/出力.zip {build_output_directory}`.\nEnsure the `relative_zip_path` correctly points to the zip ファイル created by the `build_and_zip_command`.\nYou don't need to run the `build_and_zip_command` manually. The ツール will run it for you.\nIf deploying a static site fails, try redeploying the project as a dynamic site.\nIf you have to deploy a nextjs static site, 読み取ります the `next.config.js` ファイル and make sure it includes `出力: 'export'` and `distDir: 'out'`.\n\nFor dynamic site deployments:\nEdit the `netlify.toml` ファイル to set the correct build コマンド and 出力 ディレクトリ.\n既定値 to deploying nextjs projects as dynamic sites.",
    "name": "deploy",
    "parameters": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": false,
      "properties": {
        "deploy_as_dynamic_site": {
          "description": "Set to true to deploy as a dynamic site.",
          "type": "boolean"
        },
        "deploy_as_static_site": {
          "additionalProperties": false,
          "description": "To deploy a static site. 書き込みます the build_and_zip_command and relative_zip_path. Otherwise, 書き込みます them as empty strings.",
          "properties": {
            "build_and_zip_command": {
              "description": "A コマンド to build the project and 作成します a zip of the build 出力.",
              "type": "string"
            },
            "relative_zip_path": {
              "description": "Relative パス to the zip ファイル to deploy.",
              "type": "string"
            }
          },
          "required": [
            "build_and_zip_command",
            "relative_zip_path"
          ],
          "type": "object"
        }
      },
      "required": [
        "deploy_as_static_site",
        "deploy_as_dynamic_site"
      ],
      "type": "object"
    }
  },
  {
    "description": "検索します the web for real-time text and image responses. For 例, you can get up-to-date information that might not be available in your training data, verify current facts, or find images that you can use in your project. You will see the text and images in the response. You can use the images by using the links in the <img> tag. Use this ツール to find images you can use in your project. For 例, if you need a logo, use this ツール to find a logo.",
    "name": "web_search",
    "parameters": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": false,
      "properties": {
        "search_term": {
          "description": "The 検索します term to look up on the web. Be specific and include relevant keywords for better 結果. For technical queries, include version numbers or dates if relevant.",
          "type": "string"
        },
        "type": {
          "description": "The type of 検索します to perform (text or images).",
          "enum": [
            "text",
            "images"
          ],
          "type": "string"
        }
      },
      "required": [
        "search_term",
        "type"
      ],
      "type": "object"
    }
  },
  {
    "description": "Scrape a website to see its design and content. Use this ツール to get a website's title, description, content, and screenshot (if requested). Use this ツール whenever USER gives you a documentation URL to 読み取ります or asks you to clone a website. When using this ツール, say \"I'll visit {url}...\" or \"I'll 読み取ります {url}...\" and never say \"I'll scrape\".",
    "name": "web_scrape",
    "parameters": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": false,
      "properties": {
        "include_screenshot": {
          "description": "Whether to see a screenshot of the website. Set to false when reading documentation.",
          "type": "boolean"
        },
        "theme": {
          "description": "To scrape the website in light or dark mode.",
          "enum": [
            "light",
            "dark"
          ],
          "type": "string"
        },
        "url": {
          "description": "The URL of the website to scrape. Must be a valid URL starting with http:// or https://",
          "type": "string"
        },
        "viewport": {
          "description": "The viewport to scrape the website in.",
          "enum": [
            "mobile",
            "tablet",
            "desktop"
          ],
          "type": "string"
        }
      },
      "required": [
        "url",
        "theme",
        "viewport",
        "include_screenshot"
      ],
      "type": "object"
    }
  }
]
