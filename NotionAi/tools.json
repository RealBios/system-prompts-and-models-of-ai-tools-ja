[
  {
    "description": "Retrieves details about Notion entities by their URLs.\nIf you know you want to view multiple entities, you should view them ALL at once in a single ツール call instead of taking multiple turns.\nYou can view the following types of entities:\n- Page, ie. from a <page> block or a <mention-page> mention. This also loads it for later 更新します and edits.\n- Database, ie. from a <database> block or a <mention-database> mention\n- Data source, ie. from <data-sources> inside of <database>\n- View, ie. from a <views> inside of <database>\n- User, ie. from a <mention-user> mention\n- The content of ファイル and images, ie. from a <ファイル> or <image> source\n- Any webpage via a URL\n\nUse view when you need to see the details of one or more Notion entities you already know exists and have their URLs.\n\nThe user is never aware of the compressed version of a URL (i.e.  some-url-1 ). Thus, if the user asks you to manipulate a URL, you have to first View the raw URL. Using the View ツール on any webpage URL will give you the raw URL automatically. Otherwise, you may enable the showRaw flag.\nBefore needing to see the full URL, do not 出力 the fact that you are viewing the full URL.",
    "name": "view",
    "parameters": {
      "properties": {
        "showRaw": {
          "description": "Whether to show raw URLs in the 出力. Defaults to true for URL-based resources (webpages) and false for others.",
          "type": "boolean"
        },
        "urls": {
          "description": "The URLs of the Notion entities to view.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "urls"
      ],
      "type": "object"
    }
  },
  {
    "description": "Perform one or more 検索します over:\n- \"internal\": Perform semantic 検索します over only the user's internal Notion workspace, their connected sources (including Slack, Google Drive, Github, Jira, Microsoft Teams, Sharepoint, OneDrive, or Linear), and Notion's official help docs.\n\n- \"web\": Perform web 検索します only. Use this only when you're quite certain the user doesn't want internal information. - \"既定値\": Simultaneously do an internal 検索します (Notion workspace, their connected sources (including Slack, Google Drive, Github, Jira, Microsoft Teams, Sharepoint, OneDrive, or Linear), and Notion's official help docs) AND a web 検索します. The 結果 will be a combined super-set of the internal and web 結果.\n- \"users\": 検索します for user profile id and email, which is used for creating mentions or database queries, but won't provide information about the user or find docs, tasks, or other content created by users.\n    You should never use this unless you need to @mention a user, 作成します a database クエリ or retrieve their email address. Eg if you're trying to do a database クエリ and trying to フィルタします to a specific user.\n\nYou can use 検索します when you need to find information which is not already available via other ツール, and you don't know where it's located.\n既定値 検索します is the safest 検索します ツール, since it makes the fewest assumptions by providing a super-set of internal and web 検索します 結果. It's also fast and safe to use, so you should use it liberally.\n\n### Performing multiple 検索します\n\nYou can perform multiple 検索します in a single ツール call, but ONLY if they are truly distinct and necessary.\n\n- Keep 検索します simple. If the question is simple or straightforward, 出力 just ONE クエリ in \"questions\".\n- Avoid searching for the same information with multiple queries; each 検索します should be distinct and serve a unique purpose.\n- Keep 検索します for distinct or unrelated entities separate (e.g., 検索します for \"Project X\" and \"Project Y\" separately rather than combining them into \"Project X and Y\").\n- Don't combine 検索します for 差分erent people, documents, or concepts into a single クエリ as this reduces 検索します accuracy.\n\nDo NOT use 検索します to get information about a Database's integrations, views, or other components.\nDo NOT use 検索します to try to find Notion Databases or Data Sources.\n\nIf initial 結果 do not contain all the information you need, then you can fan out to multiple queries.\n\n### Internal / 既定値 検索します Tips\n\n- If the user is asking for help using Notion's product features, an internal 検索します with the クエリ \"helpdocs\" will surface official Notion help docs.\n- A 検索します 結果 with a compressed URL of the form 20ed872b-594c-8102-9f4d-000206937e8e is a reference to an external 検索します resource.\n- Connector 検索します 結果 cannot be used as a URL for the view ツール.\n- When citing connector-slack or connector-microsoft-teams 結果, you should cite the URLs of specific messages instead of the full 検索します 結果 if a more specific citation is applicable.\n- When citing internal notion 検索します 結果, you may cite the URL of the full page or a specific block. Favor the URL of the specific block when possible.\n- If you are searching after a user's first question, do not add unnecessary details to the 検索します クエリ - basically just copy the user's question as a properly formatted question.\n\n### Web-only 検索します Tips\n\n- Caution: The first 検索します you do should almost never be a web 検索します. Because users often prefer internal information. Do a 既定値 検索します instead.\n- Start with a general 検索します first, and use the more restrictive フィルタします like category or domain フィルタします if a general 検索します is insufficient.\n- Remember that users often have internal information that they prefer. So it's often safe to use 既定値 検索します, unless the user has clearly asked for a web-only 検索します.",
    "name": "search",
    "parameters": {
      "properties": {
        "default": {
          "properties": {
            "dataSourceUrl": {
              "description": "Optionally, provide the URL of a Data source to 検索します. This will perform a semantic 検索します over the pages in the Data Source.\nNote: must be a Data Source, not a Database.",
              "type": "string"
            },
            "questions": {
              "items": {
                "description": "A question to 検索します for information, similar to the internal 検索します question.\nThe question will be used by both the internal and web 検索します systems to produce a super-set of 結果.\nThe same guidelines apply as for the internal 検索します question.",
                "type": "string"
              },
              "required": [
                "questions"
              ],
              "type": "array"
            }
          },
          "required": [
            "questions"
          ],
          "type": "object"
        },
        "internal": {
          "properties": {
            "dataSourceUrl": {
              "description": "Optionally, provide the URL of a Data source to 検索します. This will perform a semantic 検索します over the pages in the Data Source.\nNote: must be a Data Source, not a Database.",
              "type": "string"
            },
            "questions": {
              "items": {
                "description": "A question to 検索します for information in the user's workspace and any third-party 検索します connectors.\nQuestions must be in the same language as the user 入力 unless specified otherwise.\nPhrase the question naturally, 例: \"What is the ARR for OneLink for the month of April 2025?\"\nAvoid asking the same question in 差分erent ways. Each question should be a distinct request for information.\nIf the question is simple or straightforward, start with just one question.\nIf the user 入力 is just a few keywords with no clear intent, start with one simple question that includes all the keywords.\nHOW YOUR QUESTION WILL BE USED: The question will be passed in as the 入力 to a specialized LLM that will 変換します it into a structured 検索します クエリ in a specific format; that structured 検索します クエリ will then be passed into a 検索します pipeline. The specialized LLM is trained on converting natural language questions from humans into structured 検索します queries, and your question will be shown to it as if it were a question from a human. For a given 入力, the LLM will 出力 1 or more structured 検索します queries that include a question and keywords, along with optional lookback and source パラメータ; other optional フィルタします such as for channels (in slack), projects (in linear/jira), or specific ファイル types (spreadsheets, presentations, etc); and an optional パラメータ to add Notion Help Center to the 検索します scope, used for questions about how to use Notion.  Remember to 書き込みます your question as a natural language question like a human would 書き込みます, since that's what the LLM works best with.",
                "type": "string"
              },
              "required": [
                "questions"
              ],
              "type": "array"
            }
          },
          "required": [
            "questions"
          ],
          "type": "object"
        },
        "users": {
          "properties": {
            "queries": {
              "items": {
                "description": "Substring or keyword to find users by matching against their name or email address. For 例: \"john\" or \"john@例.com\"",
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "queries"
          ],
          "type": "object"
        },
        "web": {
          "properties": {
            "category": {
              "description": "Optional data category to focus the 検索します on specific types of content.\nFor 例: \"research paper\" for academic papers, \"news\" for news articles, \"company\" for company information.",
              "enum": [
                "company",
                "research paper",
                "news",
                "pdf",
                "github",
                "tweet",
                "personal site",
                "linkedin profile",
                "financial report"
              ],
              "type": "string"
            },
            "excludeDomains": {
              "description": "Optional 一覧を取得します of domains to exclude from the 検索します.\nFor 例: [\"reddit.com\", \"twitter.com\"] to exclude social media.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "excludeText": {
              "description": "Optional 一覧を取得します of text snippets that must not appear in the 検索します 結果. Currently, only 1 string is supported, of up to 5 words.\nFor 例: [\"sponsored\", \"advertisement\"] to exclude promotional content.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "includeDomains": {
              "description": "Optional 一覧を取得します of domains to restrict the 検索します to.\nFor 例: [\"arxiv.org\", \"nature.com\"] to 検索します only academic sources.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "includeText": {
              "description": "Optional 一覧を取得します of text snippets that must appear in the 検索します 結果.\nFor 例: [\"climate change\", \"renewable energy\"] to find pages containing these phrases.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "queries": {
              "items": {
                "description": "検索します クエリ to find relevant information on the web. Use natural language and include key terms.\nFor 例: \"Latest developments in LLM capabilities\"",
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "queries"
          ],
          "type": "object"
        }
      },
      "type": "object"
    }
  },
  {
    "description": "作成します one or more Notion pages with specified properties and content.\nUse 作成します-pages when you need to 作成します one or more new pages that don't exist yet.\n\nYou can 作成します a page with one of three options for its parent:\n1. 作成します a top-level private page (no parent specified)\n2. 作成します a page under another page (specify parentPageUrl)\n3. 作成します a page in a data source (specify parentDataSourceUrl)\nYou must choose exactly one of these three options.\n\n例 of creating pages:\n1. 作成します a standalone page with a title and content:\n{\"pages\": [{\"properties\":{\"title\":\"Page title\"},\"content\":\"# Section 1\n\nSection 1 content\n\n# Section 2\n\nSection 2 content\"}]}\n2. 作成します a page in a Tasks data source with URL ツールu_01U6NtB5oyBfyT5zempqX4jH and properties \"Task Name\" and \"Status\":\n// Note how we use the key \"Task Name\" instead of \"title\" because the data source has a \"Task Name\" title プロパティ.\n{\"parentDataSourceUrl\":\"ツールu_01U6NtB5oyBfyT5zempqX4jH\",\"pages\":[{\"properties\":{\"Task Name\":\"Task 123\",\"Status\":\"In Progress\"}}]}",
    "name": "create-pages",
    "parameters": {
      "properties": {
        "pages": {
          "description": "The pages to 作成します as a JSON array.",
          "items": {
            "properties": {
              "content": {
                "description": "Optional page content in Notion-flavored markdown format. Details about Notion-flavored markdown have been provided to you in the system プロンプト.\nMake tasteful use of formatting options like bold and italic text, Notion blocks such as callouts etc. Your goal is to 作成します a beautiful page that looks Notion-native.\nEvery Notion page has a title プロパティ which is automatically shown at the top of the page as a large heading. Do not include an additional heading at the start of the content, just go directly into the body of the page. If you do include a heading that duplicates the title, it will be removed automatically.",
                "type": "string"
              },
              "properties": {
                "additionalProperties": {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                "description": "The properties of the new page, which is a JSON map of プロパティ names to SQLite values.\nFor pages in a data source, use the SQLite スキーマ definition shown in <sqlite-table>.\nFor pages outside of a data source, the only required プロパティ is \"title\", which is the title of the page in inline markdown format.\nSee the \"プロパティ Value Formats\" section for accepted formats.",
                "properties": {
                  "title": {
                    "description": "Title to give the new page, if it is not in a data source. If the page is in a data source, only use properties from the data source スキーマ.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "parentDataSourceUrl": {
          "description": "URL of the data source where you want to 作成します this new page. Use the url attribute from the <data-source> XML tag. To ensure valid プロパティ values, you must know the full スキーマ of the data source before creating a page in it.",
          "type": "string"
        },
        "parentPageUrl": {
          "description": "URL of the parent page where you want to 作成します this new page. Use the url attribute from the <page> XML tag.",
          "type": "string"
        }
      },
      "required": [
        "pages"
      ],
      "type": "object"
    }
  },
  {
    "description": "更新します a Notion page properties and/or content.\n\nIMPORTANT: Use this ツール to add content to blank pages (indicated by <blank-page> tag in view 出力) instead of creating new subpages.\n\nNotion page properties are a JSON map of プロパティ names to SQLite values.\nFor pages in a data source, use the SQLite スキーマ definition shown in <sqlite-table>.\nFor pages outside of a data source, the only allowed プロパティ is \"title\", which is the title of the page and is automatically shown at the top of the page as a large heading.\nIf the page you are updating has an empty title, 生成します one and pass it in the 入力 along with any other 更新します.\n\nNotion page content is a string in Notion-flavored markdown format. Details about Notion-flavored markdown have been provided to you in the system プロンプト.\nIf the page you are updating is empty or near-empty, you should make tasteful use of formatting options like bold and italic text, Notion blocks such as callouts etc. Your goal is to 作成します a beautiful page that looks Notion-native.\nIf the page you are updating is already in a particular format and style, though, it is often best to try to match that format and style.\n\nIn order to 更新します a page, you must first view the page using the \"view\" ツール. This view-then-更新します pattern applies to all コマンド.\n\nIMPORTANT: You cannot call 更新します-page in parallel on the same page. Either find a way to use a single 更新します-page using the available コマンド, or do the 更新します in sequential ツール calls.\n\nYou can change a page's parent page or data source using the parentPageUrl or parentDataSourceUrl fields with any operation. If only changing the parent, use the updateProperties コマンド with no properties.\n\n例:\n\n更新します page properties for a page in a data source with properties \"Task Name\" and \"Status\":\n// For data source 更新します, first use the \"view\" ツール on url user://20ed872b-594c-8102-9f4d-000206937e8e to make sure that the page is loaded, even if you only care about updating properties.\n// Note how we use the key \"Task Name\" instead of \"title\" because the data source has a \"Task Name\" title プロパティ.\n{\"pageUrl\":\"user://20ed872b-594c-8102-9f4d-000206937e8e\",\"コマンド\":\"updateProperties\",\"properties\":{\"Task Name\":\"Task 123\",\"Status\":\"In Progress\"}}\n\nReplace all content and set a title on a standalone page:\n{\"pageUrl\":\"user://20ed872b-594c-8102-9f4d-000206937e8e\",\"コマンド\":\"replaceContent\",\"properties\":{\"title\":\"New Page Title\"},\"newStr\":\"# New Section\nUpdated content goes here\"}\n\nReplace specific content in a page:\n{\"pageUrl\":\"user://20ed872b-594c-8102-9f4d-000206937e8e\",\"コマンド\":\"replaceContentRange\",\"selectionWithEllipsis\":\"# Old Section...end of section\",\"newStr\":\"# New Section\nUpdated content goes here\"}\n\nInsert content after specific text:\n{\"pageUrl\":\"user://20ed872b-594c-8102-9f4d-000206937e8e\",\"コマンド\":\"insertContentAfter\",\"selectionWithEllipsis\":\"Previous section...end of section\",\"newStr\":\"## New Section\nContent to insert goes here\"}\n\nMove a page to a data source:\n{\"pageUrl\":\"user://20ed872b-594c-8102-9f4d-000206937e8e\",\"コマンド\":\"updateProperties\",\"parentDataSourceUrl\":\"https://www.notion.so/22641c91b3f580808e41c298eedc933f\",\"properties\":{}}\n\nMove a page to a page:\n{\"pageUrl\":\"user://20ed872b-594c-8102-9f4d-000206937e8e\",\"コマンド\":\"updateProperties\",\"parentPageUrl\":\"https://www.notion.so/22641c91b3f580808e41c298eedc933f\",\"properties\":{}}\n\n更新します page content with a new sub-page:\n{\"pageUrl\":\"user://20ed872b-594c-8102-9f4d-000206937e8e\",\"コマンド\":\"replaceContent\",\"newStr\":\"# New Section\n<page>New Page</page>\"}\n\n更新します a page with a new inline database:\n{\"pageUrl\":\"user://20ed872b-594c-8102-9f4d-000206937e8e\",\"コマンド\":\"replaceContent\",\"newStr\":\"# New Section\n<database inline=\"true\">New Database</database>\"}",
    "name": "update-page",
    "parameters": {
      "properties": {
        "command": {
          "description": "The コマンド to 実行します:\n- \"updateProperties\": 更新します page properties (requires 'properties' field)\n- \"replaceContent\": Replace all content in the page (requires 'newStr' field)\n- \"replaceContentRange\": Replace specific content in the page (requires 'selectionWithEllipsis' and 'newStr' fields)\n- \"insertContentAfter\": Insert content on a new line after specific text (requires 'selectionWithEllipsis' and 'newStr' fields). Keep in mind that since the new content gets inserted on a new line, you usually shouldn't start the string with a newline character.",
          "enum": [
            "updateProperties",
            "replaceContent",
            "replaceContentRange",
            "insertContentAfter"
          ],
          "type": "string"
        },
        "newStr": {
          "description": "[Required when コマンド=\"replaceContent\", \"replaceContentRange\", or \"insertContentAfter\"] The new string.\n- For replaceContent: The new string to replace all content with\n- For replaceContentRange: The new string to replace the matched content with\n- For insertContentAfter: The new content to insert after the matched content",
          "type": "string"
        },
        "pageUrl": {
          "description": "The URL of the page to 更新します. This URL must have already been loaded using the 'view' ツール, otherwise the page will not be found.",
          "type": "string"
        },
        "parentDataSourceUrl": {
          "description": "URL of the data source where you want to move the page. Use the url attribute from the <data-source> XML tag.",
          "type": "string"
        },
        "parentPageUrl": {
          "description": "URL of the parent page where you want to move the page. Use the url attribute from the <page> XML tag.",
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": [
              "string",
              "number",
              "null"
            ]
          },
          "description": "[Required when コマンド=\"updateProperties\"] A JSON object that 更新します the page's properties.\nFor pages in a data source, use the SQLite スキーマ definition shown in <sqlite-table>.\nFor pages outside of a data source, the only allowed プロパティ is \"title\", which is the title of the page in inline markdown format.\nSee the \"プロパティ Value Formats\" section for accepted formats.",
          "properties": {
            "title": {
              "description": "Title to give the page, if it is not in a data source. If the page is in a data source, only use properties from the data source スキーマ.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "selectionWithEllipsis": {
          "description": "[Required when コマンド=\"replaceContentRange\" or \"insertContentAfter\"] Unique start and end snippet of the string to match in the page content, including whitespace.\nDO NOT provide the entire string to match. Instead, provide up to the first few words of the string to match, an ellipsis, and then up to the last few words of the string to match. Keep in mind that the start sequence before the ellipsis and the end sequence after the ellipsis must not overlap; when choosing your start sequence, make sure it ends early enough that you will be able to include a suitable non-overlapping end sequence after the ellipsis.\nMake sure you provide enough of the start and end snippet to uniquely identify the string to match.\nFor 例, to match an entire section, use \"selectionWithEllipsis\":\"# Section heading...last paragraph.\"\nDo not include <content> tags in your selection.",
          "type": "string"
        }
      },
      "required": [
        "pageUrl",
        "command"
      ],
      "type": "object"
    }
  },
  {
    "description": "削除します one or more Notion pages by moving them to trash.",
    "name": "delete-pages",
    "parameters": {
      "properties": {
        "pageUrls": {
          "description": "URLs of the pages to 削除します. Use the url attribute from the <page> XML tag.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "pageUrls"
      ],
      "type": "object"
    }
  },
  {
    "description": "Use クエリ-data-sources to perform a SQLite クエリ over pages in Data Sources or クエリ a specific view by ID. This ツール can be used to 抽出します or 分析します structured data based on specific data sources that are visible in your context.\n\nMode 1: SQL クエリ over Data Sources\nYou can クエリ and join any of the tables in the set of Data Sources in dataSourceUrls, defined by their <sqlite-table> tag.\nOnly 読み取ります-only queries are allowed. The ツール will not perform 更新します, INSERT, or 削除します operations.\nMake sure you have viewed all the data sources you are querying.\nWhen possible, include the url column in the select clause.\n\nIf you are querying a column that is page URLs relating to another data source, view that data source first and then do a JOIN クエリ to get the related page data.\n\n例 1: querying the data source OKRs with URL https://www.notion.com/signup, finding all pages with the status \"In progress\" and is due:\n{\n\tmode: \"sql\",\n\tdataSourceUrls: [\"https://www.notion.com/signup\"],\n\tクエリ: \"SELECT * FROM \"https://www.notion.com/signup\" WHERE \"Status\" = ? and \"Is due\" = ?\",\n\tparams: [\"In progress\", \"__YES__\"],\n}\n\n例 2: joining two related data sources, OKRs (https://www.notion.com/signup) and Teams (https://www.notion.com/contact-sales), and getting all OKRs with their team names:\n{\n\tmode: \"sql\",\n\tdataSourceUrls: [\"https://www.notion.com/signup\", \"https://www.notion.com/contact-sales\"],\n\tクエリ: \"SELECT o.*, t.\"Team Name\" FROM \"https://www.notion.com/signup\" o JOIN \"https://www.notion.com/contact-sales\" t ON t.url IN (SELECT value FROM json_each(o.\"Team\"))\",\n\tparams: [],\n}\n\nSQLite hints:\n- The table name is the URL of the data source, and must be double quoted\n- Column names: Double quotes \" for spaces/special chars (\"Task Name\"), none needed for simple names (user_id)\n- String values: Single quotes with doubled quotes for escaping ('Won''t Fix', 'O''Reilly')\n- Double quotes in identifiers: Double them (\"column\"\"with\"\"quotes\")\n- Reserved words must use double quotes (\"order\", \"where\")\n\nQueryable column rules:\n- Only columns of the following types can be queried using this ツール: [title, person, ファイル, text, checkbox, url, email, phone_number, created_by, last_edited_by, select, multi_select, status, date, created_time, last_edited_time, relation, number, auto_increment_id, location]\n- Other column types will not be in the SQLite table or 結果\n- Un-queryable columns are still visible to the user in the UI\n\nMode 2: クエリ a specific view\n例: querying a specific view with URL 20ed872b-594c-8102-9f4d-000206937e8e:\n{\n\tmode: \"view\",\n\tviewUrl: \"20ed872b-594c-8102-9f4d-000206937e8e\"\n}\n\nThis ツール will 返します at most 100 rows once, with a hasMore flag.\nIf you need more rows, use the hasMore to decide whether to paginate.",
    "name": "query-data-sources",
    "parameters": {
      "additionalProperties": false,
      "properties": {
        "dataSourceUrls": {
          "description": "The URLs of the data sources to クエリ. Required when using SQL クエリ mode.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "mode": {
          "description": "The mode to use for the クエリ.",
          "enum": [
            "sql",
            "view"
          ],
          "type": "string"
        },
        "params": {
          "description": "Values of params to be used in the クエリ.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "query": {
          "description": "SQLite クエリ with optional params as ? marks.\nMust be a readonly クエリ.\nRequired when using SQL クエリ mode.",
          "type": "string"
        },
        "viewUrl": {
          "description": "The URL of the specific view to クエリ. Required when using view mode.",
          "type": "string"
        }
      },
      "required": [
        "mode"
      ],
      "type": "object"
    }
  },
  {
    "description": "作成します a new Database.\n\nFormat requirements as a markdown bullet 一覧を取得します.\nEach requirement should be a statement that clearly describes something you want to be true about the Database after it has been created.\nDO NOT try to reference the user's messages in the requirements, as the Database 作成します sub-agent will NOT be able to see them. Make sure to include all important information in full.\nIf you need to refer to entities in the requirements, use the entity URLs and provide context.\n\nWhen adding a two-way relation between data sources, remember that adding it to one data source will also add a プロパティ on the other, so make sure to not accidentally 作成します a two-way relation twice.\nWhen creating relations, mention both data source URLs in the requirements, even if one data source is in another database.\nRelations must be defined by data source URLs, not page or database URLs.\n\n\nDatabases must have at least one view.",
    "name": "create-database",
    "parameters": {
      "properties": {
        "dataSourceRequirements": {
          "description": "Provide detailed requirements for creating or updating the スキーマ of data sources.\nIf you want to 作成します multiple data sources, perform all 更新します simultaneously by specifying the requirements for each in this string.\nThe requirements cannot specify the content of the data sources, only the スキーマ. If you want to add pages to a data source, you need to use the '作成します-pages' ツール.\nThe requirements cannot specify 既定値 values for properties.\nNote that you cannot 作成します multiple Data sources in a single Database. You must 作成します multiple Databases, one for each owned Data source.",
          "type": "string"
        },
        "name": {
          "description": "The name for the Database.",
          "type": "string"
        },
        "parentPageUrl": {
          "description": "Optional URL of the parent page where you want to 作成します this new Database. Use the url attribute from the <page> XML tag. If empty, the Database will be created as a top-level private page.",
          "type": "string"
        },
        "replacesBlankParentPage": {
          "description": "When true, the parentPageUrl must point to a blank page (a page with no content). The blank page will be deleted and the Database will be created in its place, inheriting the blank page's parent.",
          "type": "boolean"
        },
        "viewRequirements": {
          "description": "Provide detailed requirements for creating the views. Make sure to provide the data source URLs of any existing data sources that need to be used by the views, ie. https://pinterest.com/pin/作成します/button/?url=https://www.ツールify.ai/ai-news/master-notion-ai-beginners-guide-89033.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    }
  },
  {
    "description": "更新します a single existing Database.\n\nFormat requirements as a markdown bullet 一覧を取得します.\nEach requirement should be a statement that clearly describes something you want to be true about the Database after it was updated.\nDO NOT try to reference the user's messages in the requirements, as the Database 更新します sub-agent will NOT be able to see them. Make sure to include all important information in full.\nIf you need to refer to entities in the requirements, use the entity URLs and provide context.\nIf user explicitly asks for reminders/notifications on date properties, add default_reminder to the date プロパティ here\nDo not add any additional requirements that are not explicitly needed to fulfill the user's request.\n\nOnly modify views or data sources owned by the specified database.\nWhen adding a two-way relation between data sources, remember that adding it to one data source will also add a プロパティ on the other, so make sure to not accidentally 作成します a two-way relation twice.\nWhen creating relations, mention both data source URLs in the requirements, even if one data source is in another database.\nRelations must be defined by data source URLs, not page or database URLs.\n\nDatabases must have at least one view.\nIf you want to make a calendar or timeline view, make sure the data source has at least one date プロパティ.\n\n# Inline Databases\nIMPORTANT: You cannot 更新します the \"inline\" attribute of a database with this ツール. Use a page ツール to 更新します the inline attribute.\nIf you created a 差分erent inline database via the page ツール and want to 作成します a relation to it, you must use the view ツール to obtain its data source URL to define the relation.\n\nNote about changing data source プロパティ types: changing the type of a プロパティ is a lossy operation, the existing プロパティ data will be LOST for all pages in the data source. If the task requires preserving existing data, you need to do the following in order:\n1. Get the existing プロパティ values for all pages in the data source\n2. Change the type of the プロパティ to the new type\n3. 更新します the プロパティ values for all pages in the data source to the new type",
    "name": "update-database",
    "parameters": {
      "properties": {
        "dataSourceRequirements": {
          "description": "Provide detailed requirements for updating the スキーマ of the data sources.\nIf you want to 作成します or 更新します multiple data sources, perform all 更新します simultaneously by specifying the requirements for each in this string.\nMake sure to provide the data source URLs of any existing data sources that need to be updated, ie. https://pinterest.com/pin/作成します/button/?url=https://www.ツールify.ai/ai-news/master-notion-ai-beginners-guide-89033.\nIMPORTANT NOTE: this ツール will NOT make any 更新します to the pages in the data source, only its スキーマ.\nThe requirements cannot specify 既定値 values for properties.\nNote that you cannot 作成します multiple data sources in a single database. You must 作成します multiple databases, one for each owned data source.",
          "type": "string"
        },
        "databaseUrl": {
          "description": "The URL of the Database to 更新します.",
          "type": "string"
        },
        "name": {
          "description": "Optional, the new name of the Database. If the Database only has one Data Source, this will automatically be synced to the Data Source's name.",
          "type": "string"
        },
        "viewRequirements": {
          "description": "Provide detailed requirements for updating the views. Make sure to provide the data source URLs of any existing data sources that need to be used by the views, ie. https://pinterest.com/pin/作成します/button/?url=https://www.ツールify.ai/ai-news/master-notion-ai-beginners-guide-89033.",
          "type": "string"
        }
      },
      "required": [
        "databaseUrl"
      ],
      "type": "object"
    }
  }
]
